{
    "contents" : "\n#setwd(\"~/Dropbox/vitamin_D_files/lmem\")\nsetwd(\"C:/Users/dwitonsk/Dropbox/vitamin_D_files/lmem\")\nlibrary(lumiHumanAll.db)\nlibrary(limma)\nlibrary(annotate)\nlibrary(lumi)\nrequire(ggplot2)\nsource(\"qvalue.R\")\n\nfile2<-c('probe_info_Apr26_edited_reduced.txt')\nfile1<-c('probe_info_Oct30_new.txt')\nfileset<-c(file1, file2)\nfileset.lumi<-lumiR.batch(fileset, lib.mapping='lumiHumanIDMapping')\nlumi.N.Q <- lumiExpresso(fileset.lumi, bg.correct = FALSE, bgcorrect.param = list(method='bgAdjust.affy'), variance.stabilize = TRUE, varianceStabilize.param = list(method=\"vst\"), normalize = TRUE, normalize.param = list(method=\"quantile\"), QC.evaluation = FALSE, QC.param = list(), verbose = TRUE)\ndataMatrix <- exprs(lumi.N.Q)\n\npresentCount <- detectionCall(lumi.N.Q, Th=0.01, type=c('probe'))\nselDataMatrix<-dataMatrix[presentCount > 0, ]\nprobeList <- rownames(selDataMatrix)\ngeneIDs = getEG(probeList, 'lumiHumanAll')\n\nprobeInfo = read.delim('probeInfo_2.txt', row.names=1)\ngood_nuIDs = probeInfo$nuID[probeInfo$SNP==0 & probeInfo$match==0]\ngood_and_expressed = intersect(probeList,as.character(good_nuIDs))\n\nselDataMatrix = selDataMatrix[good_and_expressed,]\nprobeInfo2 = probeInfo[good_and_expressed,]\n\ngeneIDs = probeInfo2$geneID\nselDataMatrix_t = aggregate(selDataMatrix,by=list(geneIDs), median)\nselDataMatrix3 = selDataMatrix_t[,2:120]\nrownames(selDataMatrix3)= selDataMatrix_t[,1]\n\ncov = read.delim(\"vitD_cov_combo.txt\")\ngetRes<-function(data,cov){\n  return(lm(data~cov)$residuals)\n}\n\n\n\n\nvitD_cov = cov\nvitD_data=selDataMatrix3\nqval=function(x){return(qvalue(x[!is.na(x[,2]),2])$qvalue)}\n\n\n\n##SAMPLE SUBSETS\nEXP1=vitD_cov$Exp==\"1\"\nEXP2=vitD_cov$Exp==\"2\"\nCONTR=vitD_cov$Affection==\"1\"\nCASES=vitD_cov$Affection==\"2\"\nALL=CASES|CONTR\nAA=vitD_cov$Race==\"1\"\nEA=vitD_cov$Race==\"2\"\nETH=vitD_cov$Treatment==\"E\"\nUNC=vitD_cov$Treatment==\"U\"\nVIT=vitD_cov$Treatment==\"V\"\nEV=ETH|VIT\n\n##BIOMARKERS\nOCLN=\"4950\"\nEPCAM=\"4072\"\nCDH1=\"999\"\nVIM=\"7431\"\n\n##PLOTTING FUNCTIONS \n \nraceplot<-function(x,S) {\n#jpeg(file=paste(\"gene\",x,\".jpg\",sep=\"\"))\nn=as.character(x)\nplotlist=list(t(vitD_data[n,AA&S&ETH]),t(vitD_data[n,AA&S&VIT]),t(vitD_data[n,EA&S&ETH]),t(vitD_data[n,EA&S&VIT]))\nboxplot(plotlist,names=c(\"AA_EtOH\",\"AA_VitD\",\"EA_EtOH\",\"EA_VitD\"),main=paste(\"GENE\",n),ylab=\"log2(expression)\")\n#dev.off()\n}\n\ndeplot<-function(x,S) {\n#jpeg(file=paste(\"gene\",x,\".jpg\",sep=\"\"\nn=as.character(x)\nplotlist=list(t(vitD_data[n,S&ETH]),t(vitD_data[n,S&VIT]))\nboxplot(plotlist,names=c(\"EtOH\",\"VitD\"),main=paste(\"GENE\",n),ylab=\"log(expression)\")\n#dev.off()\n}\n\n\n###########MODELS####################\nde=function(s){\ns=s&EV\n#linear model differential expression between EtOH and vitD treatments\nvtreat=function(x){return(factor(vitD_cov[x,\"Treatment\"], levels=c(\"E\",\"V\")))}\nmodel_DE=function(x,s){return(summary(lm(as.numeric(x)~vitD_cov[s,\"Sample\"]+vtreat(s)))$coef[\"vtreat(s)V\",c(1,4)])}\nreturn(t(apply(vitD_data[,s],1,model_DE,s)))\n}\n\nbe=function(s){\n#linear model of baseline expression with covariates race, gender, age and vitD_serum\nmodel_BASE=function(x,s){return(summary(lm(as.numeric(x)~vitD_cov[s,\"Race\"]+vitD_cov[s,\"Gender\"]+vitD_cov[s,\"Age\"]+vitD_cov[s,\"vitD_serum\"])))}\nreturn((apply(vitD_data[,s],1,model_BASE,s)))\n}\n\n##################################\n\n\npDE_AA=de(CONTR&AA)\npDE_EA=de(CONTR&EA)\npDE_CONTR=de(CONTR)\npDE_ALL=de(ALL)\npDE_ALL_AA=de(ALL&AA)\npDE_ALL_EA=de(ALL&EA)\n\npDE_CONTR_EXP1=de(CONTR&EXP1)\npDE_CONTR_EXP2=de(CONTR&EXP2)\npDE_CASES_EXP2=de(CASES&EXP2)\n\npDE_ALL_EXP1=de(ALL&EXP1)\npDE_ALL_EXP2=de(ALL&EXP2)\n\npBE_ETH_CONTR=be(ETH&CONTR)\n\n\n##SET QVALUE THRESHOLD\nQTHRESH=0.001\n##SET SAMPLES\nS=CONTR|CASES\n\nTOP=names(which(qval(pDE_AA)<QTHRESH|qval(pDE_EA)<QTHRESH))\n\ncleaned_data=getRes(t(vitD_data[,]),vitD_cov[,\"Exp\"])\ncleaned_data=getRes(cleaned_data,vitD_cov[,\"Gender\"])\ncleaned_data=getRes(cleaned_data,vitD_cov[,\"Race\"])\ncleaned_data=getRes(cleaned_data,vitD_cov[,\"Age\"])\ncleaned_data=getRes(cleaned_data,as.factor(vitD_cov[,\"Treatment\"]))\n\nS=CONTR\ncleaned_data=t(vitD_data)\nv = t(cleaned_data[S&VIT,])\ncolnames(v)=vitD_cov[S&VIT,2]\nids=sort(colnames(v))\nv2=v[,ids]\n\ne= t(cleaned_data[S&ETH,])\ncolnames(e)=vitD_cov[S&ETH,2]\nids=sort(colnames(e))\ne2=e[,ids] \n\nfc=v2-e2\n\nvitD_cov_short=vitD_cov[S&VIT,]\nrownames(vitD_cov_short)=vitD_cov_short$Sample\ncovFC=vitD_cov_short[ids,]\n\n\nfakecov=runif(nrow(covFC))\n\nfc_res=getRes(t(fc),fakecov)\nfc_res2=getRes(fc_res,as.factor(covFC[,\"Batch\"]))\nfc_res3=getRes(fc_res2,covFC[,\"Age\"])\nfc_res4=getRes(fc_res3,covFC[,\"Gender\"])\nfc_res5=getRes(fc_res4,covFC[,\"Race\"])\npcs_res=prcomp(t(fc_res), scale=T)$rotation\n#pcs2_res=prcomp(fc_res5, scale=T)$x[,1:3]\n#pcs_res=prcomp(t(fc), scale=T)$x\nfc_clean_pc1=getRes(t(fc),pcs_res[,1])\nfc_clean_pc2=getRes(fc_clean_pc1,pcs_res[,2])\nfc_clean_pc3=getRes(fc_clean_pc2,pcs_res[,3])\nfc_clean_pc4=getRes(fc_clean_pc3,pcs_res[,4])\nfc_clean_pc5=getRes(fc_clean_pc4,pcs_res[,5])\nfc_clean=t(fc)\nfc_clean=t(fc[TOP,])\n\nlimmafit <- function(design,modname) {\nfit <-lmFit(fc[TOP,], design)\nfit<- eBayes(fit)\nreturn(topTable(fit, coef=2, number=nrow(fit)))\n}\n\n\n##MODELS\nx=limmafit(model.matrix(~ 1+covFC$Race),\"race_nocov\")\ny=limmafit(model.matrix(~ 1+covFC$Race+covFC$vitD),\"race_nocov\")\nz=limmafit(model.matrix(~ 1+covFC$Race+covFC$Gender),\"race_nocov\")\nw=limmafit(model.matrix(~ 1+covFC$Race+covFC$Gender+covFC$vitD),\"race_nocov\")\nj=limmafit(model.matrix(~ 1+covFC$Race+covFC$Age),\"race_nocov\")\nk=limmafit(model.matrix(~ 1+covFC$Race+covFC$Age+covFC$vitD),\"race_nocov\")\nl=limmafit(model.matrix(~ 1+covFC$Race+covFC$Age+covFC$Exp),\"race_nocov\")\n\n\n\n\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender),\"model2\")\n\n\n##WITH BIOMARKERS\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+as.numeric(e2[OCLN,])+as.numeric(e2[EPCAM,])+as.numeric(e2[CDH1,])+as.numeric(e2[VIM,])),\"model3\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+as.numeric(e2[OCLN,])),\"model4\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+as.numeric(e2[EPCAM,])),\"model5\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+as.numeric(e2[CDH1,])),\"model6\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+as.numeric(e2[VIM,])),\"model7\")\n\n\n##WITH PRINCIPAL COMPONENTS\npc=prcomp(fc-apply(fc,1,mean),scale=T)\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+pc$rotation[,1]),\"model8\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+pc$rotation[,1]+pc$rotation[,2]),\"model9\")\n\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+pc$rotation[,1]+pc$rotation[,2]+pc$rotation[,3]),\"model10\")\nlimmafit(model.matrix(~ 1+covFC$Race+covFC$vitD+covFC$Age+covFC$Gender+pc$rotation[,1]+pc$rotation[,2]+pc$rotation[,3]+pc$rotation[,4]),\"model11\")\n\n\n\nraceplot(\"1969\",CONTR)\n\n",
    "created" : 1446751511448.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2489552938",
    "id" : "2D75F82F",
    "lastKnownWriteTime" : 1429220171,
    "path" : "C:/Users/dwitonsk/Dropbox/vitamin_D_files/lmem/vitD.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}